server.port=8080

google.client.id=209813369626-29rh4hsrn1t36e2014f7oqnfecjrat54.apps.googleusercontent.com
google.client.secret=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
google.redirect.uri=http://localhost:8080/api/auth/google/callback


logging.level.com.example.auth=INFO
logging.level.org.springframework.web=INFO
#logging.level.org.springframework.data.redis=DEBUG
#logging.level.org.springframework.session=DEBUG
#lo de arriba estaba antes
#Chatgpt
# niveles de log
logging.level.root=INFO
logging.level.org.springframework.data.redis=INFO
logging.level.org.springframework.session=INFO
logging.level.io.lettuce.core=INFO
# si querés silenciar justo esa clase:
logging.level.org.springframework.data.redis.core.RedisConnectionUtils=WARN



spring.profiles.active=dev

spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

spring.application.name=Google Auth API
management.info.app.name=Google Authentication Service
management.info.app.description=Servicio de autenticaciÃ³n con Google OAuth
management.info.app.version=1.0.0

#Para manejo de sesiones
spring.session.store-type=redis
spring.session.redis.namespace=spring:session
spring.session.timeout=PT30M

#Configuracion de Redis en render
spring.data.redis.host=oregon-keyvalue.render.com
spring.data.redis.port=6379
spring.data.redis.username=red-d2n3kkripnbc73e7uqcg
spring.data.redis.password=vYxhGq1t106X4qnwZZMq5nGCidEiRYv9
spring.data.redis.timeout=2000ms
spring.data.redis.database=0
spring.data.redis.ssl.enabled=true
#Lo q me tiro chatgpt
spring.session.redis.flush-mode=on_save
# escribe al final, no inmediato
spring.session.redis.save-mode=on_set_attribute
# guarda solo atributos que cambian

# URL completa para Redis
spring.data.redis.url=rediss://red-d2n3kkripnbc73e7uqcg:vYxhGq1t106X4qnwZZMq5nGCidEiRYv9@oregon-keyvalue.render.com:6379


#Confiracion de Redis
#spring.data.redis.host=localhost
#spring.data.redis.port=6379
#spring.data.redis.timeout=2000ms
#spring.data.redis.database=0

